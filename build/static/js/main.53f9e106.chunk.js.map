{"version":3,"sources":["components/content/mystyle.module.css","components/layout/Navigation.js","components/layout/Header.js","components/util/UsersAPI.js","components/util/GrowingUnitsAPI.js","components/content/ListUnits.js","components/content/CheckToken.js","Views/Home.js","components/content/AboutText.js","Views/About.js","components/content/LoginForm.js","components/util/LoginAPI.js","components/content/CheckNoToken.js","Views/Login.js","components/content/SignUpForm.js","Views/Signup.js","components/util/supragardenAPI.js","components/content/CheckData.js","components/content/ShowImage.js","components/content/CheckWatered.js","components/content/DeleteUnit.js","components/content/UnitContent.js","Views/Unitview.js","components/util/globals.js","components/content/LineChart.js","components/content/stats/StatsTemp.js","Views/StatsViews/Temperature.js","components/content/AddUnit.js","Views/Addnew.js","components/content/ChangeEmail.js","components/content/DeleteUser.js","Views/Settings.js","components/content/TestPage.js","Views/Graph.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navStyle","position","backgroundColor","top","right","height","width","zIndex","xClose","textAlign","padding","marginRight","navList","display","marginTop","color","fontSize","background","borderLeft","borderColor","maskStyle","opacity","left","white","verticalAlign","lineHeight","xStyle","Navigation","navMenu","navMenuMask","useState","showMenu","setShowMenu","style","onClick","name","to","localStorage","clear","logoStyle","emptyStyle","iconStyle","Header","getItem","className","styles","headerStyle","getSingleUser","id","fetch","then","response","json","getSingleUnit","unitId","updateData","data","token","options","method","body","JSON","stringify","headers","ListUnits","props","state","units","loading","handleSubmit","bind","getUnits","user","setState","own_units","event","preventDefault","this","map","unit","console","log","nickname","userId","loadingText","undefined","unit_id","key","boxstyle","titleStyle","infoBox","React","Component","CheckToken","history","push","withRouter","Home","boxstyle2","AboutText","About","LoginForm","doLogin","username","password","settings","login","userIsSet","setUser","setItem","user_id","errorMessage","catch","err","validUser","handleChange","target","value","prevState","fullFormStyle","formTitle","onSubmit","type","label","onChange","errorText","bottomText","buttonStyle","CheckNoToken","Login","SignUpForm","checkPw","register","error","email","Signup","apiUrl","getAllData","emoSmile","CheckTemp","current","low","high","min","max","delStyle","bottom","marginLeft","trashStyle","ShowImage","pic","picMask","showImg","setShowImg","imgStyle","src","image","image_url","alt","smallImg","CheckWatered","situation","today","last_watered","w_freq","DeleteUnit","delMessage","delMsg","delUnit","smallButtonRed","popUpDel","smallButtonStyle","toggleDelMsg","unitid","deleteButtonStyle","UnitContent","fr","FileReader","setTheLw","getNow","handleTimeUpdate","common_names","shared_access","location","supragarden","watering_frequency","data_source","owner","images","notes","getUnitId","handleImgSubmit","persist","files","readAsDataURL","imgData","handleImgSend","formData","FormData","append","processData","mimeType","contentType","success","uploadImg","showImages","img","topImg","imgList","length","bigImg","centerText","handleEdit","editingNotes","val","saveNotes","last_w","shortLoading","minmax","temp","tempW","ph","h","ec","handleClick","editNotes","Date","getTime","lwm","Math","round","hours","timeNow","getFullYear","getMonth","getDate","stats","divided","window","href","split","editStyle","smallText","match","params","getUnit","getSupragarden","contain","pathname","propperinos","boxstyle3","picStyle","lastWatered","Unitview","graphDataType","LineChart","graphReadings","parameter","graphHeader","dataObjName","takeSomeDataFromReadings","slice","times","obj","time","values","labels","datasets","pointHoverBackgroundColor","StatsTemp","setGraphView","title","xyz","goal","readings","getType","currentType","currentMinMax","setDetails","statBoxes","boxstyle4","Temperature","AddUnit","toggleForm","previous","formToggler","wateringFreqCalc","wfms","wfDdVal","wfDdNum","onNumSelect","onValSelect","addNewUnit","stream_url","handleTest","choiceButtonStyle","dropDownStyle","Addnew","ChangeEmail","editEmail","saveEmail","getUser","DeleteUser","TestPage","showName","doThing","e","embedStyle","Graph","TEMPERATURE","App","basename","exact","path","render","Settings","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.53f9e106.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contain\":\"mystyle_contain__2A1z_\",\"boxstyle\":\"mystyle_boxstyle__N5hDV\",\"boxstyle2\":\"mystyle_boxstyle2__LLeyz\",\"boxstyle3\":\"mystyle_boxstyle3__1YipR\",\"boxstyle4\":\"mystyle_boxstyle4__3bPyY\",\"fullFormStyle\":\"mystyle_fullFormStyle__2jBGk\",\"formTitle\":\"mystyle_formTitle__wRqrb\",\"bottomText\":\"mystyle_bottomText__2H7O0\",\"errorText\":\"mystyle_errorText__1yoAM\",\"buttonStyle\":\"mystyle_buttonStyle__3GLRi\",\"smallButtonStyle\":\"mystyle_smallButtonStyle__3wt11\",\"choiceButtonStyle\":\"mystyle_choiceButtonStyle__2mJ5d\",\"deleteButtonStyle\":\"mystyle_deleteButtonStyle__2GiGf\",\"delMsg\":\"mystyle_delMsg__2aV9g\",\"smallButtonRed\":\"mystyle_smallButtonRed__3npE4\",\"infoBox\":\"mystyle_infoBox__38fi0\",\"iconStyle\":\"mystyle_iconStyle__3Nr_n\",\"titleStyle\":\"mystyle_titleStyle__3JksC\",\"smallText\":\"mystyle_smallText__a0Zi5\",\"statBoxes\":\"mystyle_statBoxes__2RSlQ\",\"topImg\":\"mystyle_topImg__2R6yF\",\"dropDownStyle\":\"mystyle_dropDownStyle__zss3t\",\"headerStyle\":\"mystyle_headerStyle__3_uem\",\"loading\":\"mystyle_loading__VjnnD\",\"loadingText\":\"mystyle_loadingText__TYgbb\",\"editStyle\":\"mystyle_editStyle__b096U\",\"bigImg\":\"mystyle_bigImg__E6l4v\",\"smallImg\":\"mystyle_smallImg__3ODX9\",\"picStyle\":\"mystyle_picStyle__2EfRA\",\"centerText\":\"mystyle_centerText__3uUCt\",\"imgStyle\":\"mystyle_imgStyle__1FoJp\"};","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n function Navigation() {\r\n     const [showMenu, setShowMenu] = useState(false)\r\n\r\n     //HAMBURGER MENU (CLICK TO OPEN)\r\n     let navMenu\r\n     let navMenuMask\r\n\r\n     if (showMenu) {\r\n         navMenu = \r\n        <div \r\n        style={navStyle}>\r\n            <h1 style={xClose} onClick={() => setShowMenu(false)}><ion-icon name=\"close-outline\" style={xStyle}></ion-icon></h1>\r\n            <ul>\r\n                <li>\r\n                    <Link to='/home' style={navList} onClick={() => setShowMenu(false)}>Main</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/about' style={navList} onClick={() => setShowMenu(false)}>About</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/settings' style={navList} onClick={() => setShowMenu(false)}>Settings</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/' style={navList} onClick={() => {\r\n                        setShowMenu(false);\r\n                        localStorage.clear();\r\n                    }}>Log Out</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        navMenuMask =\r\n        <div style={maskStyle} onClick={() => setShowMenu(false)}></div>\r\n     }\r\n\r\n    return (\r\n        <nav>\r\n            <span style={white} onClick={() => setShowMenu(!showMenu)}>\r\n                <ion-icon name=\"menu\"></ion-icon>\r\n            </span>\r\n\r\n            { navMenuMask }\r\n\r\n            { navMenu }\r\n        </nav>\r\n\r\n        \r\n    )\r\n}\r\n\r\n//STYLING\r\n\r\nconst navStyle = {\r\n    position: 'fixed',\r\n    backgroundColor: '#004d00',\r\n    top: '0',\r\n    right: '0',\r\n    height: '100%',\r\n    width: '70%',\r\n    zIndex: '50',\r\n}\r\n\r\nconst xClose ={\r\n    textAlign: 'right',\r\n    padding: '5px',\r\n    marginRight: '10px',\r\n}\r\n\r\nconst navList = {\r\n    display: 'block',\r\n    marginTop: '20px',\r\n    padding: '20px',\r\n    width: '100%',\r\n    color: '#fff',\r\n    fontSize: '20px',\r\n    background: '#227D26',\r\n    borderLeft: '6px solid',\r\n    borderColor: '#003300',\r\n}\r\n\r\nconst maskStyle = {\r\n    position: 'fixed',\r\n    backgroundColor: '#000',\r\n    opacity: '0.3',\r\n    top: '0',\r\n    left: '0',\r\n    height: '100%',\r\n    width: '100%',\r\n    zIndex: '50',\r\n}\r\n\r\nconst white = {\r\n    color: '#fff',\r\n    fontSize: '46px',\r\n    display: 'flex',\r\n    verticalAlign: 'middle',\r\n    lineHeight: 'normal',\r\n}\r\n\r\nconst xStyle = {\r\n    color: '#fff',\r\n    fontSize: '46px',\r\n    \r\n    verticalAlign: 'middle',\r\n    lineHeight: 'normal',\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport styles from '../content/mystyle.module.css';\r\n\r\n//default header view\r\n\r\n function Header() {\r\n     if (localStorage.getItem('token') !== null) {\r\n        return (\r\n            <header className={ styles.headerStyle }>\r\n                <div style={iconStyle} />\r\n                <h1 style={logoStyle}>Alpome</h1>\r\n                <Navigation style={iconStyle} />\r\n            </header>\r\n        )\r\n     } else {\r\n        return (\r\n            <header className={ styles.headerStyle }>\r\n                <h1 style={emptyStyle}>Alpome</h1>\r\n            </header>\r\n        )\r\n     }\r\n}\r\n\r\n//styling\r\nconst logoStyle = {\r\n    width: '100%',\r\n    width: '200px',\r\n    right: '0',\r\n}\r\n\r\nconst emptyStyle = {\r\n    width: '100%',\r\n}\r\n\r\nconst iconStyle = {\r\n    width: '24px',\r\n}\r\n\r\nexport default Header;","/* changed urls to relative urls and added proxy url to package.json.\r\nThat way in development it uses the proxy and in prduction it uses the parent i.e server*/\r\nconst apiUrl = '/api/users/';\r\n\r\n//get info of specific user. used at ListUnits.js\r\nconst getSingleUser = (id) => {\r\n    return fetch(apiUrl + id).then(response => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\n//add a new user at SignUpForm.js\r\nconst register = (user) => {\r\n    const settings = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n    };\r\n    return fetch(apiUrl, settings).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\n// delete a user\r\nconst deleteUser = (token, user) => {\r\n    const options = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Authorization': token,\r\n      },\r\n    };\r\n    return fetch(apiUrl + user, options).then(response => {\r\n      return response;\r\n    })\r\n  }\r\n\r\nexport { getSingleUser, register, deleteUser };","/* changed urls to relative urls and added proxy url to package.json.\r\nThat way in development it uses the proxy and in prduction it uses the parent i.e server*/\r\nconst apiUrl = '/api/growing_unit/';\r\n\r\nconst getSingleUnit = (unitId) => {\r\n    return fetch(apiUrl + unitId).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\n// add a new unit. used in AddUnit.js\r\nconst addNewUnit = (data, token) => {\r\n  const options = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'token': token,\r\n    },\r\n    body: JSON.stringify(data),\r\n  };\r\n  return fetch(apiUrl, options).then(response => {\r\n    return response.json();\r\n  })\r\n}\r\n\r\nconst updateData = (data, token, unitId) => {\r\n  const options = {\r\n    method: 'PUT',\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token,\r\n    },\r\n  };\r\n  return fetch(apiUrl + unitId, options).then(response =>{\r\n    return response.json();\r\n  });\r\n}\r\n\r\n// delete a unit\r\nconst deleteUnit = (token, unit) => {\r\n  const options = {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': token,\r\n    },\r\n  };\r\n  return fetch(apiUrl + unit, options).then(response => {\r\n    return response;\r\n  })\r\n}\r\n\r\n// upload an image to the unit\r\nconst uploadImg = (data, token, unitId)=>{\r\n    console.log('imagedata: ' + data);\r\n    const options = {\r\n      method: 'POST',\r\n      body: data,\r\n      headers:{\r\n        'Authorization': token,\r\n      },\r\n      processData: false,\r\n      mimeType: \"multipart/form-data\",\r\n      contentType: false,\r\n    };\r\n    return fetch(apiUrl + 'unitimage/' + unitId, options).then(response =>{\r\n      console.log('heres the response: ' + response);\r\n      return response;\r\n    }).then(\r\n      success => console.log(success) // Handle the success response object\r\n    ).catch(\r\n      error => console.log(error) // Handle the error response object\r\n    );\r\n  };\r\n\r\n\r\n  //TODO delete image\r\n  const deleteImg = (data, token, unitId)=>{\r\n    console.log('imagedata: ' + data);\r\n    const options = {\r\n      method: 'DELETE',\r\n      body: data,\r\n      headers:{\r\n        'Authorization': token,\r\n      },\r\n      processData: false,\r\n      mimeType: \"multipart/form-data\",\r\n      contentType: false,\r\n    };\r\n    return fetch(apiUrl + 'unitimage/' + unitId, options).then(response =>{\r\n      console.log('heres the response: ' + response);\r\n      return response;\r\n    }).then(\r\n      success => console.log(success) // Handle the success response object\r\n    ).catch(\r\n      error => console.log(error) // Handle the error response object\r\n    );\r\n  };\r\n\r\nexport { getSingleUnit, addNewUnit, updateData, deleteUnit, uploadImg };\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { getSingleUser } from '../util/UsersAPI';\r\nimport { getSingleUnit } from '../util/GrowingUnitsAPI';\r\nimport styles from './mystyle.module.css'; \r\n\r\n\r\n/*this creates a new box for each unit on the main page\r\n\r\nused in Home.js*/\r\n\r\n\r\n class ListUnits extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            units: [],\r\n            loading: true,\r\n        }\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.getUnits = this.getUnits.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    /*getUnits = (user1) => {\r\n        const currentUser = user1;\r\n        getSingleUser('5fabccf9e9ace35d64f5216c').then(response => {\r\n            this.setState({\r\n                user: user1\r\n            }).then (res => {\r\n                console.log('LISTUNITSSSSSSSSS: ' + this.state.user);\r\n            })\r\n        });\r\n        return currentUser;\r\n    }*/\r\n\r\n    getUnits(id) {\r\n        getSingleUser(id).then(user => {\r\n            this.setState({\r\n              units: user.own_units,\r\n              loading: false,\r\n            });\r\n          });\r\n     }\r\n\r\n     //test\r\n    handleSubmit(event) {\r\n        const userId = localStorage.getItem('currentUser');\r\n        event.preventDefault();\r\n        this.state.units.map((unit) => {\r\n            console.log('units: ' + unit.nickname);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userId = localStorage.getItem('currentUser');\r\n        this.getUnits(userId);\r\n    }\r\n\r\n\r\n    /* \r\n    <Modal\r\n                            className={styles.deleteButtonStyle}\r\n                            isOpen={this.state.openModal}\r\n                            onRequestClose={this.toggleModal}\r\n                            contentLabel=\"Modal with image\"\r\n                            >\r\n                            <ion-icon name=\"trash\" className={ styles.iconStyle } onClick={this.toggleModal}></ion-icon>\r\n                            \r\n                            <span >desc</span>\r\n                        </Modal>\r\n    */\r\n    //first checks if there are units, then lists them\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div className={ styles.loading }>\r\n                    <div className={ styles.loadingText }>\r\n                        <ion-icon name=\"sync-outline\" ></ion-icon>\r\n                        <p>Loading</p>\r\n                    </div></div>\r\n        } else {\r\n            if (this.state.units[0] !== undefined) {\r\n                return this.state.units.map((unit) => {\r\n                    return <div><Link to={`/unit/${unit.unit_id}`} key={unit.unit_id}> \r\n                    <div className={ styles.boxstyle }>\r\n                        <ion-icon name=\"flower-outline\" className={ styles.iconStyle } ></ion-icon>\r\n                        <p className={ styles.titleStyle }>{ unit.nickname }</p>\r\n                        \r\n                        \r\n                    </div>\r\n                    \r\n                    </Link>\r\n                    \r\n                    </div>\r\n                });\r\n            } else {\r\n                return <div className={ styles.infoBox }>\r\n                        <h1>Welcome <ion-icon name=\"happy-outline\"></ion-icon></h1>\r\n                        <p>You don't seem to have any gardening units yet! Create one by pressing the button below.</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ListUnits;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\n\r\n/* checks if user is logged in. if not, will be redirected to login */\r\n\r\nclass CheckToken extends React.Component{\r\n\r\n    componentDidMount() {\r\n        const uToken = localStorage.getItem('token');\r\n\r\n        //checks if the user logs in. if not, redirected to login\r\n        if (uToken === null) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div ></div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter(CheckToken);","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../components/layout/Header';\r\nimport ListUnits from '../components/content/ListUnits';\r\nimport CheckToken from '../components/content/CheckToken';\r\nimport styles from '../components/content/mystyle.module.css'; \r\n\r\n/*this is the main page where the units are listed. \r\nthere is also an add units button*/\r\n\r\n function Home(props) {\r\n     // <img src='' alt='img' className={ styles.iconStyle } />\r\n    return (\r\n        <div>\r\n            <CheckToken />\r\n            <Header />\r\n            <ListUnits />\r\n\r\n            <Link to='/addnew'>\r\n                <div className={ styles.boxstyle2 }>\r\n                    \r\n                    <p>Add new unit +</p>\r\n                </div></Link>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport styles from './mystyle.module.css'; \r\n\r\n//used in About.js\r\n\r\n function AboutText() {\r\n    return (\r\n        <div className={styles.infoBox}>\r\n            <h1>About us</h1>\r\n            <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutText;","import React from 'react'\r\nimport Header from '../components/layout/Header';\r\nimport AboutText from '../components/content/AboutText';\r\nimport CheckToken from '../components/content/CheckToken';\r\n\r\n\r\n function About() {\r\n    return (\r\n        <div>\r\n            <CheckToken />\r\n            <Header />\r\n            <AboutText />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport styles from './mystyle.module.css'; \r\nimport { login } from '../util/LoginAPI';\r\n\r\n//used in Login.js\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n            errorMessage: '',\r\n            validUser: true,\r\n        };\r\n        \r\n        //binding 'this'\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        //this.setUser = this.setUser.bind(this);\r\n        this.doLogin = this.doLogin.bind(this);\r\n    }\r\n\r\n    //sends the info to LoginAPI.js, which sends and compares it to the database\r\n    doLogin = () => {\r\n        login(this.state.user.username, this.state.user.password).then(response => {\r\n            if (response.user !== undefined) {\r\n                const userIsSet = this.props.setUser(response.user);\r\n                localStorage.setItem('token', response.token);\r\n                localStorage.setItem('currentUser', response.user.user_id);\r\n                this.props.history.push('/home');\r\n                return userIsSet;\r\n            } else {\r\n                this.setState({errorMessage: 'Username or password is incorrect.'});\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    };\r\n    \r\n    //writing or pressing anything\r\n    handleChange(event) {   \r\n        /*let nam = event.target.name;\r\n        let val = event.target.value;\r\n        \r\n        this.setState({[nam]: val});  */\r\n\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            user: {\r\n                ...prevState.user,\r\n                [name]: value,\r\n            },\r\n        }));\r\n\r\n        /*\r\n        if (name === 'username') {\r\n            this.checkUsername(target.value);\r\n          }\r\n*/\r\n    }\r\n/*\r\n    checkUsername = (username) => {\r\n        checkUser(username).then((result) => {\r\n          console.log(result.available);\r\n          this.setState({ validUser: result.available });\r\n        });\r\n    };\r\n*/\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.doLogin();\r\n    }\r\n\r\n    \r\n\r\n    /*componentDidMount() {\r\n        console.log('token' + localStorage.getItem('token'));\r\n        if(localStorage.getItem('token') !== null) {\r\n            console.log('token' + localStorage.getItem('token'));\r\n        }\r\n    }*/\r\n    \r\n    render () {\r\n        return <div className={styles.fullFormStyle}>\r\n                <h1 className={styles.formTitle}>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>Username</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"username\" id=\"username\" label=\"Username\"\r\n                        value={this.state.user.username}\r\n                        onChange={this.handleChange} />\r\n                    <label>Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        name=\"password\" id=\"password\" label=\"Password\"\r\n                        value={this.state.user.password}\r\n                        onChange={this.handleChange}\r\n                         />\r\n\r\n                    <div>\r\n                        <p className={styles.errorText}>{this.state.errorMessage}</p>\r\n                    </div>\r\n\r\n                    <div className={styles.bottomText}>\r\n                        <p>Don't have an account?</p>\r\n                        <Link to='/signup'>Sign up here!</Link>\r\n                        <p>{\"\\n\"}</p>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" \r\n                    className={styles.buttonStyle} \r\n                    >Login</button>\r\n                </form>\r\n\r\n                \r\n                </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginForm);","/* changed urls to relative urls and added proxy url to package.json.\r\nThat way in development it uses the proxy and in prduction it uses the parent i.e server*/\r\nconst apiUrl = '/api/login/';\r\n\r\n\r\n// used in LoginForm.js\r\n\r\nconst login = (username, password) => {\r\n    const settings = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    };\r\n    return fetch(apiUrl, settings).then(response => {\r\n      return response.json();\r\n    });\r\n};\r\n\r\nexport { login };","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\n/* checks if user is logged in. if is, will be redirected to homepage */\r\n\r\nclass CheckNoToken extends React.Component{\r\n\r\n    componentDidMount() {\r\n        const uToken = localStorage.getItem('token');\r\n\r\n        //checks if the user logs in. if not, redirected to login\r\n        if (uToken !== null) {\r\n            this.props.history.push('/home');\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div ></div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter(CheckNoToken);","import React from 'react'\r\nimport Header from '../components/layout/Header';\r\nimport LoginForm from '../components/content/LoginForm';\r\nimport CheckNoToken from '../components/content/CheckNoToken';\r\n\r\n\r\n class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <CheckNoToken />\r\n                <Header />\r\n                <LoginForm setUser={this.props.setUser} />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport styles from './mystyle.module.css'; \r\nimport { register } from '../util/UsersAPI';\r\n\r\n//used in Signup.js\r\n\r\nclass SignUpForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                email: '',\r\n                password: '',\r\n                checkPw: '',\r\n            },\r\n            errorMessage: '',\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleChange(event) {   \r\n        /*let nam = event.target.name;\r\n        let val = event.target.value;\r\n        \r\n        this.setState({[nam]: val});  */\r\n\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            user: {\r\n                ...prevState.user,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n    //sends submit info to UsersAPI.js to register, if it doesnt work, adds an error message to the page\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.user.password === this.state.user.checkPw) {\r\n            const user = {...this.state.user};\r\n            delete user.checkPw;\r\n\r\n            register(user).then(user => {\r\n                if (user.error !== undefined) {\r\n                    this.setState({ errorMessage: 'Cannot signup. Username, password or email needs to be changed.' })\r\n                } else {\r\n                    this.props.history.push('/');\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({ errorMessage: 'Passwords do not match.' })\r\n        }\r\n        \r\n    }\r\n\r\n    render () {\r\n        return <div className={styles.fullFormStyle}>\r\n                <h1 className={styles.formTitle}>Sign Up</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>Username</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"username\" \r\n                        value={this.state.username} \r\n                        onChange={this.handleChange} />\r\n                    <label>Email Address</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"email\"\r\n                        value={this.state.email} \r\n                        onChange={this.handleChange} />\r\n                    <label>Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        name=\"password\" \r\n                        value={this.state.password} \r\n                        onChange={this.handleChange} />\r\n                    <label>Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        name=\"checkPw\" \r\n                        value={this.state.checkPw} \r\n                        onChange={this.handleChange} />\r\n\r\n                    <div>\r\n                        <p className={styles.errorText}>{this.state.errorMessage}</p>\r\n                    </div>\r\n\r\n                    <div className={styles.bottomText}>\r\n                        <p>Already have an account?</p>\r\n                        <Link to='/'>Login here!</Link>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className={styles.buttonStyle}>Sign Up</button>\r\n                </form>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUpForm);","import React from 'react'\r\nimport Header from '../components/layout/Header';\r\nimport SignUpForm from '../components/content/SignUpForm'\r\nimport CheckNoToken from '../components/content/CheckNoToken';\r\n\r\n\r\n function Signup() {\r\n    return (\r\n        <div>\r\n            <CheckNoToken />\r\n            <Header />\r\n            <SignUpForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","const apiUrl = 'https://us-central1-amiable-hydra-279814.cloudfunctions.net/app/api/read';\r\n\r\n//get all data of a single unit\r\nconst getAllData = () => {\r\n    return fetch(apiUrl).then(response => {\r\n        \r\n        return response.json();;\r\n    })\r\n}\r\n\r\nconst getDayData = (date) => {\r\n    return fetch(apiUrl + '/datetime/' + date).then(response => {\r\n        return response.json();;\r\n    })\r\n}\r\n\r\nexport { getAllData, getDayData };","import React from 'react';\r\nimport styles from './mystyle.module.css'; \r\n\r\n\r\n/* checks if the current value is good for plants/unit and returns either a happy or a sad face\r\nused in UnitContent.js and StatsTemp.js */\r\n function CheckTemp(props) {\r\n     if (props.current >= props.low && props.current <= props.high) {\r\n        return <div style={emoSmile}><ion-icon name=\"happy-outline\" className={ styles.iconStyle }></ion-icon> </div>\r\n     } else if (props.current >= props.min && props.current <= props.max) {\r\n        return <div style={emoSmile}><ion-icon name=\"sad-outline\" className={ styles.iconStyle }></ion-icon></div>\r\n     } else {\r\n      return <div style={emoSmile}><ion-icon name=\"skull-outline\" className={ styles.iconStyle }></ion-icon></div>\r\n     }\r\n    \r\n}\r\n\r\n\r\n//styling\r\nconst emoSmile = {\r\n    fontSize: '50px',\r\n    marginRight: '20px',\r\n    marginTop: '10px',\r\n}\r\n\r\n\r\n\r\nexport default CheckTemp;","import React, { useState } from 'react';\r\nimport styles from './mystyle.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n function ShowImage(props) {\r\n     const [showImg, setShowImg] = useState(false)\r\n\r\n     //HAMBURGER MENU (CLICK TO OPEN)\r\n     let pic\r\n     let picMask\r\n\r\n     // TODO: clicking the trashcan deletes the image\r\n     if (showImg) {\r\n         pic = \r\n        <div \r\n        className={ styles.imgStyle }>\r\n            <h1 style={xClose} onClick={() => setShowImg(false)}><ion-icon name=\"close-outline\" style={xStyle}></ion-icon></h1>\r\n            <img src={props.image.image_url} alt='none' />\r\n            \r\n            <h1 style={delStyle} onClick={() => setShowImg(false)}><ion-icon name=\"trash-outline\" style={trashStyle}></ion-icon></h1>\r\n        </div>\r\n\r\n        picMask =\r\n        <div style={maskStyle} onClick={() => setShowImg(false)}></div>\r\n     }\r\n\r\n    return (\r\n        <nav>\r\n            <span style={white} onClick={() => setShowImg(!showImg)}>\r\n                <img src={props.image.image_url} alt='img' className={ styles.smallImg }/>\r\n            </span>\r\n\r\n            { picMask }\r\n\r\n            { pic }\r\n        </nav>\r\n\r\n        \r\n    )\r\n}\r\n\r\n//STYLING\r\n/*\r\nconst imgStyle = {\r\n    position: 'fixed',\r\n    top: '10%',\r\n    bottom: '30%',\r\n    right: '0',\r\n    left: '0',\r\n    maxWidth: '100%',\r\n    maxHeight: '80%',\r\n    zIndex: '100',\r\n}\r\n*/\r\nconst xClose ={\r\n    position: 'fixed',\r\n    textAlign: 'right',\r\n    right: '0',\r\n    padding: '5px',\r\n    marginRight: '10px',\r\n}\r\n\r\nconst delStyle ={\r\n    position: 'fixed',\r\n    textAlign: 'left',\r\n    left: '0',\r\n    bottom: '10px',\r\n    padding: '5px',\r\n    marginLeft: '10px',\r\n}\r\n\r\nconst navList = {\r\n    display: 'block',\r\n    marginTop: '20px',\r\n    padding: '20px',\r\n    width: '100%',\r\n    color: '#fff',\r\n    fontSize: '20px',\r\n    background: '#227D26',\r\n    borderLeft: '6px solid',\r\n    borderColor: '#003300',\r\n}\r\n\r\nconst maskStyle = {\r\n    position: 'fixed',\r\n    backgroundColor: '#000',\r\n    opacity: '0.3',\r\n    top: '0',\r\n    left: '0',\r\n    height: '100%',\r\n    width: '100%',\r\n    zIndex: '100',\r\n}\r\n\r\nconst white = {\r\n    color: '#fff',\r\n    fontSize: '46px',\r\n    display: 'flex',\r\n    verticalAlign: 'middle',\r\n    lineHeight: 'normal',\r\n}\r\n\r\nconst xStyle = {\r\n    color: '#fff',\r\n    fontSize: '46px',\r\n    \r\n    verticalAlign: 'middle',\r\n    lineHeight: 'normal',\r\n}\r\n\r\nconst trashStyle = {\r\n    color: '#fff',\r\n    fontSize: '46px',\r\n    verticalAlign: 'middle',\r\n    lineHeight: 'normal',\r\n}\r\n\r\nexport default ShowImage;","import React from 'react';\r\nimport styles from './mystyle.module.css'; \r\n\r\n\r\n/* checks if the current value is good for plants/unit and returns either a happy or a sad face\r\nused in UnitContent.js and StatsTemp.js */\r\n function CheckWatered(props) {\r\n     const situation = (props.today - props.last_watered);\r\n     if (situation <= props.w_freq) {\r\n        return <div style={emoSmile}><ion-icon name=\"happy-outline\" className={ styles.iconStyle }></ion-icon> </div>\r\n     } else if (situation > props.w_freq) {\r\n        return <div style={emoSmile}><ion-icon name=\"sad-outline\" className={ styles.iconStyle }></ion-icon></div>\r\n     } else {\r\n      return <div style={emoSmile}><ion-icon name=\"skull-outline\" className={ styles.iconStyle }></ion-icon></div>\r\n     }\r\n}\r\n\r\n//styling\r\nconst emoSmile = {\r\n    fontSize: '50px',\r\n    marginRight: '20px',\r\n    marginTop: '10px',\r\n}\r\n\r\nexport default CheckWatered;","import React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { deleteUnit } from '../util/GrowingUnitsAPI';\r\nimport styles from './mystyle.module.css'; \r\n\r\n\r\n/*deletes the unit\r\n\r\nused in UnitContent*/\r\n class DeleteUnit extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            delMsg: false,\r\n        }\r\n\r\n        this.popUpDel = this.popUpDel.bind(this);\r\n        this.delUnit = this.delUnit.bind(this);\r\n        \r\n    }\r\n\r\n    // toggles message view\r\n    toggleDelMsg() {\r\n        this.setState(prevState => ({ delMsg: !prevState.delMsg }));\r\n    }\r\n\r\n    // message that asks for delete confirmation\r\n    delMessage = () => {\r\n        if(this.state.delMsg) {\r\n            return <div className={ styles.delMsg }>\r\n                <p>Are you sure?</p>\r\n                <button onClick={this.delUnit} className={ styles.smallButtonRed }>Yes</button>\r\n                <button onClick={this.popUpDel} className={ styles.smallButtonStyle }>Cancel</button>\r\n            </div>\r\n        }\r\n    }\r\n\r\n     // del button (opens message)\r\n     popUpDel = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.toggleDelMsg();\r\n     }\r\n\r\n     //deletes the unit from backend\r\n     delUnit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const unitId = this.props.unitid;\r\n        console.log('props working: ' + unitId);\r\n\r\n        deleteUnit('bearer ' + localStorage.getItem('token'), unitId).then(unit => {\r\n            console.log('unit deleted: ' + unit)\r\n            if (unit.error !== undefined) {\r\n                this.setState({ errorMessage: 'Could not delete unit' })\r\n            } else {\r\n                this.props.history.push('/home');\r\n            }\r\n        })\r\n     }\r\n\r\n\r\n    render (){\r\n        return <div>\r\n            {this.delMessage()}\r\n            <button className={styles.deleteButtonStyle} onClick={this.popUpDel}>\r\n                <p>Delete unit</p>\r\n                <ion-icon name=\"trash\" className={ styles.iconStyle }></ion-icon> \r\n            </button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(DeleteUnit);","import React, { useState, useEffect} from 'react';\r\nimport { Link, useParams, withRouter } from 'react-router-dom';\r\nimport styles from './mystyle.module.css'; \r\nimport { getSingleUnit, updateData, uploadImg } from '../util/GrowingUnitsAPI';\r\nimport { getAllData, getDayData } from '../util/supragardenAPI';\r\nimport CheckTemp from './CheckData';\r\nimport ShowImage from './ShowImage';\r\nimport CheckWatered from './CheckWatered';\r\nimport DeleteUnit from './DeleteUnit';\r\n\r\n/* the content for Unitview.js \r\nNOTE: minmax values are currently hardcoded into the state, and are sent through props to StatsTemp */\r\n\r\n class UnitContent extends React.Component{\r\n\r\n    fr = new FileReader();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            unit: '',\r\n            data: [],\r\n            last_w: null,\r\n            editingNotes: false,\r\n            image: '',\r\n            loading: true,\r\n            shortLoading: true,\r\n            minmax: {\r\n                temp: {\r\n                    min: '10',\r\n                    low: '16',\r\n                    high: '24',\r\n                    max: '30'\r\n                },\r\n                tempW: {\r\n                    min: '10',\r\n                    low: '16',\r\n                    high: '24',\r\n                    max: '30'\r\n                },\r\n                ph: {\r\n                    min: '3.5',\r\n                    low: '5',\r\n                    high: '6.5',\r\n                    max: '8'\r\n                },\r\n                h: {\r\n                    min: '50',\r\n                    low: '70',\r\n                    high: '90',\r\n                    max: '110'\r\n                },\r\n                ec: {\r\n                    min: '1',\r\n                    low: '1.5',\r\n                    high: '3.5',\r\n                    max: '4'\r\n                },\r\n            }\r\n        }\r\n        \r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\r\n        this.topImg = this.topImg.bind(this);\r\n        this.handleImgSubmit = this.handleImgSubmit.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.editNotes = this.editNotes.bind(this);\r\n        this.editingNotes = this.editingNotes.bind(this);\r\n        this.saveNotes = this.saveNotes.bind(this);\r\n        this.showImages = this.showImages.bind(this);\r\n    }\r\n\r\n\r\n    //gets unit info from the alpome db and saves it to the state\r\n    getUnit(id) {\r\n        getSingleUnit(id).then(unit => {\r\n            this.setState({\r\n              unit,\r\n              last_w: unit.last_watered,\r\n              shortLoading: false,\r\n            },\r\n            );\r\n          });\r\n     }\r\n\r\n     // date and time for last_watered\r\n     getNow() {\r\n        const timeNow = new Date();\r\n        const dateNow = timeNow.getTime();\r\n\r\n        return dateNow;\r\n    }\r\n\r\n    // sets unit.last_watered to current time, TODO: I need to find a goo place to trigger this function \r\n    setTheLw = () => {\r\n        this.setState((prevState) => ({\r\n            unit: {\r\n                ...prevState.unit,\r\n                last_watered: this.getNow(),\r\n            },\r\n        }));\r\n        console.log('setTheLw: ' + JSON.stringify(this.state.unit));\r\n        console.log('getttnowww: ' + this.getNow())\r\n        return this.state.unit;\r\n    }\r\n\r\n    lastWatered() {\r\n        const minutes = 1000 * 60;\r\n        const hours = minutes * 60;\r\n        const days = hours * 24;\r\n        const weeks = days * 7;\r\n        const years = days * 365;\r\n\r\n        //const lwm = this.getNow() - 1606145477788;\r\n        const lwm = this.getNow() - this.state.unit.last_watered;\r\n        const lwn = Math.round(lwm / days);\r\n\r\n        return lwn;\r\n    }\r\n\r\n    // for updating last_watered NOT WORKING\r\n    handleTimeUpdate = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setTheLw();\r\n\r\n        const unit = {\r\n            \"common_names\": this.state.unit.common_names,\r\n            \"shared_access\": this.state.unit.shared_access,\r\n            \"nickname\": this.state.unit.nickname,\r\n            \"location\": this.state.unit.location,\r\n            \"supragarden\": this.state.unit.supragarden,\r\n            \"last_watered\": this.getNow(),\r\n            \"watering_frequency\": this.state.unit.watering_frequency,\r\n            \"data_source\": this.state.unit.data_source,\r\n            \"owner\": this.state.unit.owner,\r\n            \"images\": this.state.unit.images,\r\n            \"unit_id\": this.state.unit.unit_id,\r\n            \"notes\": this.state.unit.notes\r\n        }\r\n        //const unit = {...this.state.unit};\r\n        const unitId = this.getUnitId();\r\n\r\n        console.log('unitId: ' + unitId);\r\n        \r\n        updateData(unit, 'bearer ' + localStorage.getItem('token'), unitId).then(unit => {\r\n            if (unit.error !== undefined) {\r\n                console.log( '(UnitContent.js) Error message: ' + unit.error)\r\n            } else {\r\n                console.log( 'It worked.' )\r\n            }\r\n        })\r\n    }\r\n\r\n     // get the date for getDayData()\r\n     getToday() {\r\n        const timeNow = new Date();\r\n        const dateNow = timeNow.getFullYear() + '-' + (timeNow.getMonth() + 1) + '-' + timeNow.getDate();\r\n        return dateNow;\r\n    }\r\n\r\n     //get current data for the supragarden unit from https://us-central1-amiable-hydra-279814.cloudfunctions.net/app/api/read\r\n     getSupragarden() {\r\n         // this suddenly isnt working :^)\r\n\r\n         /* note to other devs: check the supragarden API. \r\n         it suddenly isn't giving daily data anymore, causing the app to crash\r\n         \r\n         getDayData(this.getToday()) */\r\n         \r\n         getAllData().then(stats => {\r\n             if (stats[0] !== undefined) {\r\n                this.setState({\r\n                    data: stats[0].data,\r\n                    loading: false,\r\n                });\r\n             } else {\r\n                 console.log('something is not working');\r\n             }\r\n             \r\n         });\r\n     }\r\n     \r\n     // gets the units id from the url (then go to getUnit())\r\n     getUnitId() {\r\n        const located = window.location.href;\r\n        const divided = located.split('/');\r\n        const theId = divided[divided.length -1] \r\n        return theId;\r\n    }\r\n    \r\n    // adds image to state\r\n    handleImgSubmit = (event) => {\r\n        event.persist();\r\n        console.log('tried to add img' + event.target.files[0]);\r\n\r\n        this.fr.readAsDataURL(event.target.files[0]);\r\n\r\n        let imgData = event.target.files[0];\r\n        /*const formData = new FormData();\r\n        formData.append('file', imgData);*/\r\n\r\n        console.log('event target ' + imgData);\r\n        //TODO!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            image: event.target.files[0]\r\n        }));\r\n\r\n        // URL.createObjectURL()\r\n        console.log('here we are ' + JSON.stringify(this.state.image));\r\n    }\r\n\r\n    //posts image to unit at GrowingUnitsAPI.js\r\n    handleImgSend = (event) => {\r\n        event.preventDefault();\r\n        console.log('here we are ' + this.state.image);\r\n        const unitId = this.getUnitId();\r\n\r\n        const formData = new FormData();\r\n        formData.append('image', this.state.image);\r\n        \r\n\r\n        uploadImg(formData, 'bearer ' + localStorage.getItem('token'), unitId).then(image => {\r\n            console.log('UnitContent img upload msg: ' + image);\r\n            if (image !== undefined) {\r\n                console.log( '(UnitContent.js) Error message: ' + image)\r\n            } else {\r\n                console.log( 'Image uploaded. ' + image );\r\n            }\r\n        })\r\n    }\r\n\r\n    // photos at the bottom of the screen <img src={img.image_url} alt='img' className={ styles.bigImg }/>\r\n    showImages = (unit) => {\r\n        if (unit.images[0] !== undefined) {\r\n            return this.state.unit.images.map(img => {\r\n                return <div key={img.key}>\r\n                    \r\n                    <ShowImage image={img} unitid={this.getUnitId()}> </ShowImage>\r\n                </div>\r\n            })\r\n        }\r\n    }\r\n\r\n    // the image at the top of the page\r\n    // not working     value={this.state.image.file_name}\r\n\r\n    /*\r\n    \r\n    <form onSubmit={this.handleImgSend} >\r\n                    <input type=\"file\" name=\"plant_img\" onChange={this.handleImgSubmit} />\r\n                    <button className={ styles.smallButtonStyle }>Add image</button>\r\n                </form>\r\n    */\r\n    topImg = (imgList) => {\r\n        if (imgList[0] !== undefined){\r\n            return <div >\r\n                <img src={imgList[imgList.length - 1].image_url} alt='No image' className={ styles.bigImg } />\r\n                \r\n            </div>\r\n        } else {\r\n            return <div className={ styles.bigImg }>\r\n                <p className={ styles.centerText }></p>\r\n                <form onSubmit={this.handleImgSend}>\r\n                    <input type=\"file\" name=\"plantimg\" onChange={this.handleImgSubmit} />\r\n                    <p>{'\\n'}</p>\r\n                    <button className={ styles.smallButtonStyle }>Add image</button>\r\n                </form>\r\n            </div>\r\n        }\r\n    }\r\n\r\n    // updating and viewing the notes\r\n    editNotes() {\r\n        if (this.state.editingNotes) {\r\n            return <div><form onSubmit={this.saveNotes}>\r\n                <textarea \r\n                    type=\"text\" \r\n                    className={ styles.editStyle } \r\n                    value={this.state.unit.notes}\r\n                    onChange={this.editingNotes}\r\n                ></textarea>\r\n                <button  className={ styles.smallButtonStyle }>Save</button>\r\n            </form></div>\r\n        } else {\r\n            return <div>\r\n                <p className={ styles.smallText }>{this.state.unit.notes}</p>\r\n                <button onClick={this.handleEdit} className={ styles.smallButtonStyle }>Edit</button>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    handleEdit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({editingNotes: !this.state.editingNotes})\r\n    }\r\n\r\n    editingNotes = (event) => {\r\n        event.preventDefault();\r\n\r\n        const val = event.target.value;\r\n\r\n        this.setState((prevState) => ({\r\n            unit: {\r\n                ...prevState.unit,\r\n                notes: val,\r\n            },\r\n        }));\r\n    }\r\n\r\n    saveNotes = (event) => {\r\n        event.preventDefault();\r\n\r\n        const unit = {...this.state.unit};\r\n        const unitId = this.getUnitId();\r\n        this.setState({editingNotes: !this.state.editingNotes});\r\n        \r\n        updateData(unit, 'bearer ' + localStorage.getItem('token'), unitId).then(unit => {\r\n            console.log('msg from UnitContent: ' + JSON.stringify(unit));\r\n            console.log(' this is the state ' + JSON.stringify(this.state.unit));\r\n            if (unit.error !== undefined) {\r\n                console.log( '(UnitContent.js) Error message: ' + unit.error)\r\n            } else {\r\n                console.log( 'It worked.' )\r\n            }\r\n        })\r\n    }\r\n\r\n     //test\r\n     handleClick(event) {\r\n        event.preventDefault();\r\n/*\r\n        this.getToday().then(today => {\r\n            console.log('does this even work lol' + today)\r\n        })\r\n*/\r\n        console.log('window.location.href ' + window.location.href);\r\n        console.log('HERE ARE THE CURRENT PROPS ' + JSON.stringify(this.props));\r\n        console.log('AND HERE IS THE ID ' + JSON.stringify(this.props.match.params.unitid));\r\n        console.log('image url: ' + JSON.stringify(this.state.unit.images));\r\n        console.log('garden info: ' + JSON.stringify(this.state.data));\r\n        console.log('UNIT STATE: ' + JSON.stringify(this.state.unit));\r\n        console.log('LASTAWATEREEEED: ' + this.state.last_w);\r\n        console.log('right now: ' + this.getNow());\r\n    }\r\n\r\n    componentDidMount() {\r\n        const unitId = this.getUnitId();\r\n        \r\n        this.getUnit(unitId)\r\n        this.getSupragarden();\r\n    }\r\n\r\n    // TEST BUTTON: <button onClick={this.handleClick}>test</button>\r\n\r\n    render () {\r\n        if (this.state.unit.supragarden === true) {\r\n            if(this.state.loading) {\r\n                return <div className={ styles.loading }>\r\n                    <div className={ styles.loadingText }>\r\n                        <ion-icon name=\"sync-outline\" ></ion-icon>\r\n                        <p>Loading</p>\r\n                    </div></div>\r\n            } else {\r\n                return (\r\n                    <div className={ styles.contain }>\r\n                        <div className={ styles.bigImg }>{this.topImg(this.state.unit.images)}</div>\r\n                        <h1>{this.state.unit.nickname}</h1>\r\n                        <Link to={{\r\n                            pathname: `/unit/temperature/${this.state.unit.unit_id}`,\r\n                            propperinos: { type: 'temp', minmax: this.state.minmax.temp }\r\n                        }} unitid={this.state.unit.unit_id} type='temp'>\r\n                            <div className={ styles.boxstyle3 }>\r\n                                <CheckTemp current={this.state.data.temp} \r\n                                min={this.state.minmax.temp.min} low={this.state.minmax.temp.low} high={this.state.minmax.temp.high} max={this.state.minmax.temp.max} />\r\n                                \r\n                                    <div>\r\n                                        <p>Temperature</p>\r\n                                        <p className={ styles.smallText }>{this.state.data.temp} °C</p>\r\n                                    </div>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={{\r\n                            pathname: `/unit/temperature/${this.state.unit.unit_id}`,\r\n                            propperinos: { type: 'tempW', minmax: this.state.minmax.tempW }\r\n                        }}>\r\n                            <div className={ styles.boxstyle3 }>\r\n                                <CheckTemp current={this.state.data.tempW} \r\n                                min={this.state.minmax.tempW.min} low={this.state.minmax.tempW.low} high={this.state.minmax.tempW.high} max={this.state.minmax.tempW.max} />\r\n                                \r\n                                    <div>\r\n                                        <p>Water Temperature</p>\r\n                                        <p className={ styles.smallText }>{this.state.data.tempW} °C</p>\r\n                                    </div>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={{\r\n                            pathname: `/unit/temperature/${this.state.unit.unit_id}`,\r\n                            propperinos: { type: 'ph', minmax: this.state.minmax.ph }\r\n                        }}>\r\n                            <div className={ styles.boxstyle3 }>\r\n                                <CheckTemp current={this.state.data.ph} \r\n                                min={this.state.minmax.ph.min} low={this.state.minmax.ph.low} high={this.state.minmax.ph.high} max={this.state.minmax.ph.max} />\r\n                                \r\n                                    <div>\r\n                                        <p>pH</p>\r\n                                        <p className={ styles.smallText }>{this.state.data.ph} </p>\r\n                                    </div>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={{\r\n                            pathname: `/unit/temperature/${this.state.unit.unit_id}`,\r\n                            propperinos: { type: 'h', minmax: this.state.minmax.h }\r\n                        }}>\r\n                            <div className={ styles.boxstyle3 }>\r\n                                <CheckTemp current={this.state.data.h} \r\n                                min={this.state.minmax.h.min} low={this.state.minmax.h.low} high={this.state.minmax.h.high} max={this.state.minmax.h.max} />\r\n                                \r\n                                    <div>\r\n                                        <p>Humidity</p>\r\n                                        <p className={ styles.smallText }>{this.state.data.h} %</p>\r\n                                    </div>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={{\r\n                            pathname: `/unit/temperature/${this.state.unit.unit_id}`,\r\n                            propperinos: { type: 'ec', minmax: this.state.minmax.ec }\r\n                        }}>\r\n                            <div className={ styles.boxstyle3 }>\r\n                                <CheckTemp current={this.state.data.ec} \r\n                                min={this.state.minmax.ec.min} low={this.state.minmax.ec.low} high={this.state.minmax.ec.high} max={this.state.minmax.ec.max} />\r\n                                \r\n                                    <div>\r\n                                        <p>Electronic Conductivity</p>\r\n                                        <p className={ styles.smallText }>{this.state.data.ec} mS/cm</p>\r\n                                    </div>\r\n                            </div>\r\n                        </Link>\r\n\r\n                        <form onSubmit={this.handleImgSend} >\r\n                            <input type=\"file\" name=\"plant_img\" onChange={this.handleImgSubmit} />\r\n                            <button className={ styles.smallButtonStyle }>Add image</button>\r\n                        </form>\r\n\r\n                        <div className={ styles.picStyle }>\r\n                            {this.showImages(this.state.unit)}\r\n                        </div>\r\n                        <DeleteUnit unitid={this.getUnitId()} />\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        } else {\r\n            if(this.state.shortLoading) {\r\n                return <div className={ styles.loading }>\r\n                    <div className={ styles.loadingText }>\r\n                        <ion-icon name=\"sync-outline\" ></ion-icon>\r\n                        <p>Loading</p>\r\n                    </div></div>\r\n            } else {\r\n            return (\r\n                <div className={ styles.contain }>\r\n                    <div >{this.topImg(this.state.unit.images)}</div>\r\n                    <h1>{this.state.unit.nickname}</h1>\r\n                    <div className={ styles.boxstyle3 }>\r\n                        <CheckWatered w_freq={this.state.unit.watering_frequency} today={this.getNow()} last_watered={this.state.unit.last_watered}/>\r\n                        <div>\r\n                            <p className={ styles.smallText }>Your garden was last watered {this.lastWatered()} days ago. </p>\r\n                            <button onClick={this.handleTimeUpdate} className={ styles.smallButtonStyle }>Plants watered!</button>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className={ styles.boxstyle3 }>\r\n                        \r\n                        {this.editNotes()}\r\n                    </div>\r\n\r\n                    <form onSubmit={this.handleImgSend} >\r\n                        <input type=\"file\" name=\"plant_img\" onChange={this.handleImgSubmit} />\r\n                        <button className={ styles.smallButtonStyle }>Add image</button>\r\n                    </form>\r\n\r\n                    <div className={ styles.picStyle }>\r\n                        {this.showImages(this.state.unit)}\r\n                    </div>\r\n\r\n                    <DeleteUnit unitid={this.getUnitId()} />\r\n                    \r\n                </div>\r\n            )\r\n        }}\r\n    }\r\n}\r\n\r\nexport default withRouter(UnitContent);","import React from 'react';\r\nimport Header from '../components/layout/Header';\r\nimport UnitContent from '../components/content/UnitContent';\r\nimport CheckToken from '../components/content/CheckToken';\r\n\r\n/* the page of info abt a specific unit by id\r\nprops to UnitContent sent by ListUnits.js */\r\n\r\n function Unitview(props) {\r\n    return (\r\n        <div>\r\n            <CheckToken />\r\n            <Header />\r\n            <UnitContent {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Unitview;","//these are tuples. JS doesnt have tuples but you can use arrays to mimic them\r\n//MEASUREMENT: [\"graphTitle\", \"nameInAPI\", \"unit\"]\r\nconst degreeCelsius= \"℃\"\r\nconst ppm =\"ppm\"\r\n\r\nconst graphDataType = {\r\n    \"TEMPERATURE\": [\"Temperature\", \"temp\", degreeCelsius],\r\n    \"TVOC\": ['TVOC','tvoc', ppm],\r\n    \"ELECTRICAL_CONDUCTIVITY\": [\"Electrical Conductivity\", \"ec\", \"\"],\r\n    \"CO2\": [\"CO2\", \"co2\", ppm],\r\n    \"PH\": [\"pH\", \"ph\", \"\"],\r\n    \"HUMIDITY\": [\"Humidity\", \"h\", \"%\"],\r\n    \"WATER_TEMPERATURE\": [\"Water Temperature\", \"tempW\", degreeCelsius],\r\n    \"LIGHT\": [\"Light\", \"light\", \"on/off\"]\r\n  }\r\n\r\n  export {\r\n    graphDataType\r\n  }\r\n","import React, { useState } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { graphDataType } from '../../components/util/globals'\r\n\r\n/**\r\n * \r\n * @param {Array} prop.parameter [\"graphTitle\", \"nameInAPI\", \"unitOfMeasurement\"] \r\n * @param {Array} prop.graphReadings [readings from the supragarden API] \r\n */\r\nfunction LineChart({graphReadings, parameter}) {\r\n  const [graphHeader, setGraphHeader] = useState(parameter[0])\r\n  const [dataObjName, setDataObjName] = useState(parameter[1])\r\n  \r\n  const takeSomeDataFromReadings = graphReadings.slice(0, 50);\r\n  const times = takeSomeDataFromReadings.map(obj => obj.data.time.split(' ')[1].slice(0,5))\r\n  const values= takeSomeDataFromReadings.map(obj => obj.data[`${dataObjName}`])\r\n  \r\n  const data={\r\n    labels: times,\r\n    datasets: [\r\n      {\r\n        label: `${graphHeader}`,\r\n        data: [...values],\r\n        pointHoverBackgroundColor: 'rgba(170,25,127,1)',\r\n      },\r\n    ]\r\n  }\r\n\r\n  const handleGraphDataTypeChange = () =>{\r\n    const value = document.getElementById('graphDataType').value\r\n    //setDataObjName(value)[1]\r\n    setDataObjName(graphDataType[`${value}`][1])\r\n    setGraphHeader(graphDataType[`${value}`][0])\r\n    console.log(value)\r\n  }\r\n\r\n  const renderDropdownOptions = ()=> {\r\n    const dropdownOptions = [...Object.keys(graphDataType)]\r\n    //console.log(dropdownOptions);\r\n\r\n    return dropdownOptions.map((option) => {\r\n      const titleWithUnits = `${graphDataType[`${option}`][0]} ${graphDataType[`${option}`][2]}`\r\n      return <option value={option} >{titleWithUnits}</option>\r\n    });\r\n  }\r\n\r\n  /*\r\n  good code, but not necessarily needed?\r\n  \r\n  <label htmlFor=\"graphDataType\">Select measurements </label>\r\n\r\n  <div className=\"dropdown\" >\r\n        \r\n        <select name=\"graphDataType\" data-testid=\"search-criteria\"\r\n          id=\"graphDataType\" onChange={handleGraphDataTypeChange}>\r\n            {renderDropdownOptions()}\r\n        </select>\r\n      </div>\r\n  */\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Line data={data} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineChart\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport CheckTemp from '../CheckData';\r\nimport LineChart from '../LineChart';\r\nimport { graphDataType } from '../../util/globals';\r\nimport { getSingleUnit } from '../../util/GrowingUnitsAPI';\r\nimport { getDayData, getAllData } from '../../util/supragardenAPI';\r\nimport styles from '../mystyle.module.css'; \r\n\r\n\r\n class StatsTemp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            unit: '',\r\n            data: [],\r\n            loading: true,\r\n            type: '',\r\n            title: '',\r\n            xyz: '',\r\n            goal: '',\r\n            minmax: {\r\n                min: '',\r\n                low: '',\r\n                high: '',\r\n                max: '',\r\n            },\r\n            readings: [],\r\n        }\r\n        this.getUnit = this.getUnit.bind(this);\r\n        this.getType = this.getType.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        \r\n    }\r\n\r\n    //gets unit info from the alpome db\r\n    getUnit(id) {\r\n        console.log('props.unitid: ' + id);\r\n        getSingleUnit(id).then(unit => {\r\n            this.setState({\r\n              unit\r\n            });\r\n          });\r\n     }\r\n\r\n     // get the date for getDayData()\r\n     getToday() {\r\n        const timeNow = new Date();\r\n        const dateNow = timeNow.getFullYear() + '-' + (timeNow.getMonth() + 1) + '-' + timeNow.getDate();\r\n        return dateNow;\r\n    }\r\n\r\n     //get current data for the supragarden unit from https://us-central1-amiable-hydra-279814.cloudfunctions.net/app/api/read\r\n     getSupragarden() {\r\n\r\n        /* note to other devs: check the supragarden API. \r\n        it suddenly isn't giving daily data anymore, causing the app to crash\r\n        \r\n        getDayData(this.getToday()) */\r\n        \r\n        getAllData().then(stats => {\r\n            if (stats[0] !== undefined) {\r\n               this.setState({\r\n                   data: stats[0].data,\r\n                   loading: false,\r\n               });\r\n            } else {\r\n                console.log('something is not working');\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    getUnitId() {\r\n        const located = window.location.href;\r\n        const divided = located.split('/');\r\n        const theId = divided[divided.length -1];\r\n        return theId;\r\n    }\r\n\r\n    // get the type of data thru props\r\n    getType() {\r\n        if (this.props.location.propperinos !== undefined) {\r\n            this.setState({\r\n                type: this.props.location.propperinos.type\r\n            })\r\n        } else {\r\n            this.props.history.push('/home');\r\n        }\r\n    }\r\n\r\n    // sets the title, type of value and goal\r\n    setDetails() {\r\n        let currentType = '';\r\n        let currentMinMax = '';\r\n        if (this.props.location.propperinos !== undefined) {\r\n            currentType = this.props.location.propperinos.type;\r\n            currentMinMax = this.props.location.propperinos.minmax;\r\n        };\r\n\r\n        if(currentType === 'temp') {\r\n            this.setState({\r\n                title: 'Temperature',\r\n                xyz: '°C',\r\n                goal: '20',\r\n                minmax: currentMinMax,\r\n            })\r\n        } else if (currentType === 'tempW') {\r\n            this.setState({\r\n                title: 'Water Temperature',\r\n                xyz: '°C',\r\n                goal: '20',\r\n                minmax: currentMinMax,\r\n            })\r\n        } else if (currentType === 'ph') {\r\n            this.setState({\r\n                title: 'pH',\r\n                xyz: '',\r\n                goal: '5,75',\r\n                minmax: currentMinMax,\r\n            })\r\n        } else if (currentType === 'h') {\r\n            this.setState({\r\n                title: 'Humidity',\r\n                xyz: '%',\r\n                goal: '80',\r\n                minmax: currentMinMax,\r\n            })\r\n        } else if (currentType === 'ec') {\r\n            this.setState({\r\n                title: 'Electronic Conductivity',\r\n                xyz: 'mS/cm',\r\n                goal: '2,5',\r\n                minmax: currentMinMax,\r\n            })\r\n        }\r\n    }\r\n\r\n    setGraphView = () => {\r\n        const type = this.state.type;\r\n        if(type === 'temp') {\r\n            return 'TEMPERATURE';\r\n        } else if (type === 'tempW') {\r\n            return 'WATER_TEMPERATURE';\r\n        } else if (type === 'ph') {\r\n            return 'PH';\r\n        } else if (type === 'h') {\r\n            return 'HUMIDITY';\r\n        } else if (type === 'ec') {\r\n            return 'ELECTRICAL_CONDUCTIVITY';\r\n        }\r\n    }\r\n\r\n    //test\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n\r\n        \r\n        console.log('täälä propsit: ' + JSON.stringify(this.props.location.propperinos.type));\r\n        console.log('ja täälä statet: ' + this.state.type);\r\n        console.log('title and thing ' + this.state.title + this.state.xyz);\r\n        console.log('here is the type in caps: ' + this.setGraphView());\r\n\r\n    }\r\n\r\n     componentDidMount() {\r\n         // TODO!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n         const unitId = this.getUnitId();\r\n\r\n         this.getUnit(unitId);\r\n         this.getSupragarden();\r\n         this.getType();\r\n         this.setDetails();\r\n         getAllData().then((data) => this.setState({ readings: data }));\r\n     }\r\n\r\n     // TEST BUTTON: <button onClick={this.handleClick}>test</button>\r\n\r\n    render () {\r\n        if(this.state.loading) {\r\n            return <div className={ styles.loading }>\r\n            <div className={ styles.loadingText }>\r\n                <ion-icon name=\"sync-outline\" ></ion-icon>\r\n                <p>Loading</p>\r\n            </div></div>\r\n        } else {\r\n            return (\r\n                <div className={ styles.contain }>\r\n                    <h1>{this.state.unit.nickname}</h1>\r\n                    <div className={ styles.boxstyle }>\r\n                    <CheckTemp current={this.state.data[this.state.type]} \r\n                                min={this.state.minmax.min} low={this.state.minmax.low} high={this.state.minmax.high} max={this.state.minmax.max} />\r\n                        {this.state.title}\r\n                    </div>\r\n                    <div className={ styles.statBoxes }>\r\n                        <div className={ styles.boxstyle4 }>\r\n                            <p>Current</p>\r\n                            <p className={ styles.smallText }>{this.state.data[this.state.type]} {this.state.xyz}</p>\r\n                        </div>\r\n                        <div className={ styles.boxstyle4 }>\r\n                            <p>Goal</p>\r\n                            <p className={ styles.smallText }>{this.state.goal} {this.state.xyz}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"App\">\r\n        \r\n                        <div className=\"chart\" >\r\n                        <LineChart graphReadings={this.state.readings} parameter={graphDataType[this.setGraphView()]}/>\r\n                    </div>\r\n    </div>\r\n        \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(StatsTemp);","import React from 'react'\r\nimport StatsTemp from '../../components/content/stats/StatsTemp';\r\nimport Header from '../../components/layout/Header';\r\nimport CheckToken from '../../components/content/CheckToken';\r\n\r\n\r\n// props to StatsTemp sent from UnitContent.js\r\n function Temperature(props) {\r\n    /*\r\n        render = {props => <PageStart {...props} key={this.props.location.key} /> }\r\n    */\r\n    return (\r\n        <div>\r\n            <CheckToken />\r\n            <Header />\r\n            <StatsTemp {...props} unitId={props.unit_id} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Temperature;","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { addNewUnit } from '../util/GrowingUnitsAPI';\r\nimport styles from './mystyle.module.css'; \r\n\r\n/* for adding a new unit\r\nused in Addnew.js*/\r\n\r\n/* NOTE: THIS IS STILL IN UNDER CONSTRUCTION BCS BACKEND ISNT GETTING CORRECT INFO FOR SOME REASON */\r\n\r\nclass AddUnit extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            unit: {\r\n                nickname: '',\r\n                common_names: [],\r\n                location: '',\r\n                supragarden: false,\r\n                last_watered: null,\r\n                watering_frequency: null,\r\n                data_source: null,\r\n                owner: localStorage.getItem('currentUser'),\r\n                shared_access: [],\r\n                stream_url: '',\r\n                notes: 'Here is a description of your garden!',\r\n                images: []\r\n            },\r\n            wfDdNum: 1,\r\n            wfDdVal: 'days',\r\n\r\n            formToggler: false,\r\n            errorMessage: '',\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleTest = this.handleTest.bind(this);\r\n    }\r\n    \r\n    handleChange = (event) => {   \r\n\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            unit: {\r\n                ...prevState.unit,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n    toggleForm = (previous) => {\r\n        this.setState((prevState) => ({\r\n            unit: {\r\n                ...prevState.unit,\r\n                supragarden: !previous,\r\n            },\r\n            formToggler: !previous,\r\n        }));\r\n        \r\n    }\r\n\r\n    // watering frequency shenanigans\r\n    wateringFreqCalc = () => {\r\n        let wfms = 0;\r\n\r\n        if(this.state.wfDdVal === 'hours'){\r\n            wfms = (this.state.wfDdNum * 60 * 60 * 1000);\r\n            this.setState((prevState) => ({\r\n                unit: {\r\n                    ...prevState.unit,\r\n                    watering_frequency: wfms,\r\n                },\r\n            }));\r\n            return this.state.unit;\r\n        } else if (this.state.wfDdVal === 'days') {\r\n            wfms = (this.state.wfDdNum * 24 * 60 * 60 * 1000);\r\n            this.setState((prevState) => ({\r\n                unit: {\r\n                    ...prevState.unit,\r\n                    watering_frequency: wfms,\r\n                },\r\n            }));\r\n            return this.state.unit;\r\n        } else if (this.state.wfDdVal === 'weeks') {\r\n            wfms = (this.state.wfDdNum * 7 * 24 * 60 * 60 * 1000);\r\n            this.setState((prevState) => ({\r\n                unit: {\r\n                    ...prevState.unit,\r\n                    watering_frequency: wfms,\r\n                },\r\n            }));\r\n            return this.state.unit;\r\n        } else if (this.state.wfDdVal === 'months') {\r\n            wfms = (this.state.wfDdNum * 30 * 24 * 60 * 60 * 1000);\r\n            this.setState((prevState) => ({\r\n                unit: {\r\n                    ...prevState.unit,\r\n                    watering_frequency: wfms,\r\n                },\r\n            }));\r\n            return this.state.unit;\r\n        } else {\r\n            this.setState((prevState) => ({\r\n            unit: {\r\n                    ...prevState.unit,\r\n                    watering_frequency: null,\r\n                },\r\n            }));\r\n            return this.state.unit;\r\n        }\r\n    }\r\n    \r\n    onNumSelect = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            wfDdNum: event.target.value\r\n        },\r\n        this.wateringFreqCalc\r\n        );\r\n    }\r\n\r\n    onValSelect = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            wfDdVal: event.target.value\r\n        },\r\n        this.wateringFreqCalc\r\n        );\r\n\r\n        \r\n    }\r\n\r\n    // supragarden true/false toggle button\r\n    handleClick =(event) => {\r\n        event.preventDefault();\r\n        this.toggleForm(this.state.formToggler);\r\n    }\r\n\r\n    //test\r\n    handleTest(event) {\r\n        event.preventDefault();\r\n\r\n        this.wateringFreqCalc();\r\n        console.log('heres the numbers (from addunit): ' + JSON.stringify(this.state.unit));\r\n\r\n    }\r\n\r\n    /* \r\n    this.wateringFreqCalc();\r\n        console.log('pls work: ' + JSON.stringify(this.state.unit));\r\n    */\r\n\r\n    // submit the whole form\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const unit = {...this.state.unit};\r\n        \r\n        console.log('here it is: ' + this.state.unit.watering_frequency);\r\n\r\n        addNewUnit(unit, localStorage.getItem('token')).then(unit => {\r\n            console.log('msg from AddUnit: ' + JSON.stringify(unit));\r\n            console.log(' here is the state ' + JSON.stringify(this.state.unit));\r\n            if (unit.error !== undefined) {\r\n                this.setState({ errorMessage: 'Cannot add unit.' })\r\n            } else {\r\n                this.props.history.push('/home');\r\n            }\r\n        })\r\n    }\r\n\r\n    /* the if/else statement changes input and state depending on whether the unit is connected to a \r\n    supragarden or not supragarden has a data source while a normal unit has watering frequency*/\r\n\r\n    // TEST BUTTON: <button onClick={this.handleClick}>test</button>\r\n\r\n    render () {\r\n        if (this.state.formToggler === true) { \r\n            return <div className={styles.fullFormStyle}>\r\n            <h1>Add New Unit</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>Nickname</label>\r\n                <input \r\n                    type=\"text\" \r\n                    value={this.state.nickname}\r\n                    onChange={this.handleChange} \r\n                    name=\"nickname\"/>\r\n                <label>Location</label>\r\n                <input \r\n                    type=\"text\" \r\n                    value={this.state.location}\r\n                    onChange={this.handleChange} \r\n                    name=\"location\"/>\r\n                \r\n                \r\n                <label>\r\n                    <button onClick={this.handleClick} className={styles.choiceButtonStyle}><ion-icon name=\"radio-button-on-outline\" ></ion-icon></button>\r\n                    Is it a hydroponic system?\r\n                </label>\r\n                \r\n                <p className={styles.errorText}>{this.state.errorMessage}</p>\r\n                <p>{'\\n'}</p>\r\n                <button type=\"submit\" className={styles.buttonStyle}>Add Unit</button>\r\n            </form>\r\n            </div>\r\n        } else {\r\n            return <div className={styles.fullFormStyle}>\r\n            <h1>Add New Unit</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>Nickname</label>\r\n                <input \r\n                    type=\"text\" \r\n                    value={this.state.nickname}\r\n                    onChange={this.handleChange} \r\n                    name=\"nickname\"/>\r\n                <label>Location</label>\r\n                <input \r\n                    type=\"text\" \r\n                    value={this.state.location}\r\n                    onChange={this.handleChange} \r\n                    name=\"location\"/>\r\n                \r\n                <label>\r\n                <button onClick={this.handleClick} className={styles.choiceButtonStyle}><ion-icon name=\"radio-button-off-outline\"></ion-icon></button>\r\n                    Is it a hydroponic system?\r\n                </label>\r\n\r\n                <label>Watering Frequency</label>\r\n                <select value={this.state.wfDdNum} onChange={this.onNumSelect} className={styles.dropDownStyle}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"11\">11</option>\r\n                    <option value=\"12\">12</option>\r\n                </select>\r\n                <select value={this.state.wfDdVal} onChange={this.onValSelect} className={styles.dropDownStyle}>\r\n                    <option value=\"hours\">Hours</option>\r\n                    <option value=\"days\">Days</option>\r\n                    <option value=\"weeks\">Weeks</option>\r\n                    <option value=\"months\">Months</option>\r\n                </select>\r\n                \r\n                <p className={styles.errorText}>{this.state.errorMessage}</p>\r\n                <p>{'\\n'}</p>\r\n                <button type=\"submit\" className={styles.buttonStyle}>Add Unit</button>\r\n            </form>\r\n            </div>\r\n        }\r\n        \r\n\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter(AddUnit);","import React from 'react'\r\nimport Header from '../components/layout/Header';\r\nimport AddUnit from '../components/content/AddUnit';\r\nimport CheckToken from '../components/content/CheckToken';\r\n\r\n function Addnew() {\r\n    return (\r\n        <div>\r\n            <CheckToken />\r\n            <Header previous='' />\r\n            <AddUnit />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addnew;","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getSingleUser } from '../util/UsersAPI';\r\nimport styles from './mystyle.module.css';\r\n\r\n/* change users email in settings */\r\n\r\nclass ChangeEmail extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            loading: true,\r\n            errorMessage: '',\r\n        };\r\n        \r\n        this.handleTest = this.handleTest.bind(this);\r\n        this.editEmail = this.editEmail.bind(this);\r\n        this.saveEmail = this.saveEmail.bind(this);\r\n    }\r\n\r\n    getUser(id) {\r\n        getSingleUser(id).then(user => {\r\n            this.setState({\r\n              user: user,\r\n              loading: false,\r\n            });\r\n          });\r\n     }\r\n\r\n    editEmail = (event) => {\r\n        event.preventDefault();\r\n        const val = event.target.value;\r\n\r\n        this.setState((prevState) => ({\r\n            user: {\r\n                ...prevState.unit,\r\n                email: val,\r\n            },\r\n        }));\r\n    }\r\n\r\n    saveEmail = (event) => {\r\n        event.preventDefault();\r\n\r\n        const user = {...this.state.user};\r\n        console.log('email changed (in state only): ' + user.email);\r\n        \r\n        \r\n    }\r\n\r\n    //test\r\n    handleTest(event) {\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUser(localStorage.getItem('currentUser'));\r\n    }\r\n\r\n    // TEST BUTTON: <button onClick={this.handleClick}>test</button>\r\n\r\n    render () {\r\n        return <div className={styles.fullFormStyle}>\r\n            <form onSubmit={this.saveEmail}>\r\n            <label>New email:</label>\r\n                <input \r\n                    type=\"text\" \r\n                    value={this.state.user.email}\r\n                    onChange={this.editEmail} \r\n                    name=\"email\"/>\r\n                <button type=\"submit\" className={styles.buttonStyle}>Change email</button>\r\n            </form>\r\n            \r\n        </div>\r\n        \r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter(ChangeEmail);","import React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { deleteUser } from '../util/UsersAPI';\r\nimport styles from './mystyle.module.css'; \r\n\r\n\r\n/*deletes the unit\r\n\r\nused in UnitContent*/\r\n class DeleteUnit extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            delMsg: false,\r\n        }\r\n\r\n        this.popUpDel = this.popUpDel.bind(this);\r\n        this.delUnit = this.delUnit.bind(this);\r\n        \r\n    }\r\n\r\n    // toggles message view\r\n    toggleDelMsg() {\r\n        this.setState(prevState => ({ delMsg: !prevState.delMsg }));\r\n    }\r\n\r\n    // message that asks for delete confirmation\r\n    delMessage = () => {\r\n        if(this.state.delMsg) {\r\n            return <div className={ styles.delMsg }>\r\n                <p>Are you sure?</p>\r\n                <button onClick={this.delUnit} className={ styles.smallButtonRed }>Yes</button>\r\n                <button onClick={this.popUpDel} className={ styles.smallButtonStyle }>Cancel</button>\r\n            </div>\r\n        }\r\n    }\r\n\r\n     // del button (opens message)\r\n     popUpDel = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.toggleDelMsg();\r\n     }\r\n\r\n     //deletes the user from backend\r\n     delUnit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const userId = localStorage.getItem('currentUser');\r\n        console.log('props working: ' + userId);\r\n\r\n        deleteUser('bearer ' + localStorage.getItem('token'), userId).then(user => {\r\n            console.log('user deleted: ' + user)\r\n            if (user.error !== undefined) {\r\n                this.setState({ errorMessage: 'Could not delete user' })\r\n            } else {\r\n                localStorage.clear();\r\n                this.props.history.push('/');\r\n            }\r\n        })\r\n     }\r\n\r\n\r\n    render (){\r\n        return <div>\r\n            {this.delMessage()}\r\n            <button className={styles.deleteButtonStyle} onClick={this.popUpDel}>\r\n                <p>Delete user</p>\r\n                <ion-icon name=\"trash\" className={ styles.iconStyle }></ion-icon> \r\n            </button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(DeleteUnit);","import React from 'react';\r\nimport ChangeEmail from '../components/content/ChangeEmail';\r\nimport Header from '../components/layout/Header';\r\nimport CheckToken from '../components/content/CheckToken';\r\nimport DeleteUser from '../components/content/DeleteUser';\r\n\r\n\r\n function Unitview() {\r\n    return (\r\n        <div>\r\n            <CheckToken />\r\n            <Header />\r\n            <h1>Settings</h1>\r\n            <ChangeEmail />\r\n            <DeleteUser />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Unitview;","import React from 'react';\r\nimport Header from '../layout/Header';\r\nimport { getSingleUser } from '../util/UsersAPI';\r\n\r\n//this is a page just for testing out some stuff. not a part of the final product /test8437586490743385891029748\r\n\r\n class TestPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            username: ''\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.showName = this.showName.bind(this);\r\n    }\r\n\r\n    /*componentDidMount () {\r\n        if (localStorage.getItem('token') === null) {\r\n            console.log('no token');\r\n            this.props.history.push('login');\r\n        } else {\r\n            console.log('yes token');\r\n        }\r\n        \r\n    }*/\r\n    \r\n\r\n     doThing(id) {\r\n         \r\n\r\n        getSingleUser(id).then(user => {\r\n          \r\n            \r\n            this.setState({\r\n              username: user.username\r\n            }, () => {\r\n              console.log('username: ', this.state.username);\r\n            });\r\n          });\r\n     }\r\n\r\n     handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.doThing(this.state.id);\r\n    }\r\n\r\n    showName(e) {\r\n        console.log('username2: ' + this.state.username);\r\n    }\r\n\r\n     render() {\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n    \r\n                <div>\r\n                    <p>{'\\n'}</p>\r\n                    <p>{'\\n'}</p>\r\n                    <p>{'\\n'}</p>\r\n                    <h1>IS THIS WORKING</h1>\r\n                    <form onClick={this.handleSubmit}>\r\n\r\n                        <button type='submit' >get name to state</button>\r\n                        \r\n                    </form>\r\n                    <button type='submit' onClick={this.showName}>console log name</button>\r\n\r\n                    <embed src='https://us-central1-amiable-hydra-279814.cloudfunctions.net/app/api/read' style={embedStyle}></embed>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n     }\r\n    \r\n}\r\n\r\nconst embedStyle = {\r\n    width: '500px', \r\n    height: '300px',\r\n}\r\n\r\nexport default TestPage;","import React, { Component } from 'react'\r\nimport LineChart from '../components/content/LineChart'\r\nimport { graphDataType } from '../components/util/globals'\r\nimport { getAllData } from '../components/util/supragardenAPI'\r\n\r\n\r\n\r\nclass Graph extends Component {\r\n  state = {\r\n    readings: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    getAllData().then((data) => this.setState({ readings: data }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n        <div className=\"chart\" >\r\n          <LineChart graphReadings={this.state.readings} parameter={graphDataType.TEMPERATURE}/>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Graph","import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/layout/Header';\r\nimport Home from './Views/Home';\r\nimport About from './Views/About';\r\nimport Login from './Views/Login';\r\nimport Signup from './Views/Signup';\r\nimport Unitview from './Views/Unitview';\r\nimport Temperature from './Views/StatsViews/Temperature';\r\nimport Addnew from './Views/Addnew';\r\nimport Settings from './Views/Settings';\r\n\r\n//test\r\nimport TestPage from './components/content/TestPage';\r\nimport Graph from './Views/Graph';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      units: []\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  \r\n\r\n  // set the user in the state\r\n  setUser = (user) => {\r\n    this.setState({ user });\r\n    console.log('setuser state', this.state.user);\r\n    \r\n  }\r\n\r\n\r\n  //test\r\n  handleClick(event) {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    console.log('users id: ' + this.state.user.user_id);\r\n}\r\n  \r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className='container'>\r\n          \r\n          \r\n          \r\n  \r\n          <Router basename=''>\r\n  \r\n            <Switch>\r\n              <Route exact path='/' render={(props) => (\r\n                \r\n                <Login {...props} state={this.state} setUser={this.setUser} />\r\n              )}></Route>\r\n              <Route path='/about' render={(props) => (\r\n                <About {...props} />\r\n              )}></Route>\r\n              <Route path='/home' render={(props) => (\r\n                <Home {...props} user={this.state.user} units={this.state.units} />\r\n              )}></Route>\r\n              <Route path='/signup' render={(props) => (\r\n                <Signup {...props} />\r\n              )}></Route>\r\n              <Route exact path='/unit/:unitid' render={(props) => (\r\n                <Unitview {...props} user={this.state.user} />\r\n              )}></Route>\r\n              <Route path='/unit/temperature/:id' render={(props) => (\r\n                <Temperature {...props} units={this.state.units} />\r\n              )}></Route>\r\n              <Route path='/addnew' render={(props) => (\r\n                <Addnew {...props} />\r\n              )}></Route>\r\n              <Route path='/graph' render={(props) => (\r\n                <Graph {...props} />\r\n              )}></Route>\r\n              <Route path='/settings' render={(props) => (\r\n                <Settings {...props} />\r\n              )}></Route>\r\n\r\n              <Route path='/test8437586490743385891029748' render={(props) => (\r\n                <TestPage {...props} />\r\n              )}></Route>\r\n  \r\n            </Switch>\r\n            \r\n          </Router>\r\n  \r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  \r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}